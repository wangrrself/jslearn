回顾:
	1.字符串：
		var str = '';
	2.数组：
		var arr = [];
		访问数组里面的某一项： arr[number]
	3.字符串拼接：
		口诀:两撇,两个加号,中间放变量;
	4.流程控制语句：
		1>.if(){}else{}
		2>.switch(){}
	5.作用域：
		全局变量：
			任何地方都可以使用;
		局部变量：
			只在函数内部使用;
		闭包：
			子函数可以使用父函数的局部变量;			
		变量遮蔽：
			子函数的局部变量和全局变量重名,不会覆盖,只会遮蔽,就近选择;
	6.运算符：
		算术运算符：
			+-*/%
		赋值运算符：
			+=,-=,*=,/=,%=,=
		比较运算符：
			>=,<=,>,<,!=
		逻辑运算符:或且非;
			&&：并且;
			|| :或者
			！ ： 取反；
			
		
	7.if(){}else{}简写：
		var a = 1;
		if(a == 1){
			alert('ok');
		}else{
			alert('no');
		}------> a == 1 ? alert('ok') : alert('no');
	
		if(a == 1){
			alert('ok');
		}----------> a == 1 && alert('ok');
	

eval:主要跟字符串打交道,把字符串转换为JS可以执行的程序;
     非常好用,但是不建议使用,因为太强大了,[eval注入,eval攻击];

获取非行间[获取计算后,生效后的]样式:
      obj.currentStyle.width    IE;不支持的话报undefined;
      getComputedStyle(oBox,false).width兼容高版本;
      get:获取,computed:计算后的,style:样式;


函数:


   1.定义
   2.调用
          return:返回值给了谁?谁调用函数就给谁;

出现undefined的情况:
1.函数不写return,默认返回undefined;
2.写了return,没写具体的返回值;
3.访问一个不存在的属性;
1.???

往数组里面添加一个:arr.push(元素);

随机数:
     Math.random();

双色球:
     1.6个球;
     2.不重复;
     3.随机,parseInt(Math.random()*(m-n)+n);
     4.1-33之间;

背景色的表达方式:
    1.英语;
    2.#c00;
    3.rgb(0,255,234);